syntax = "proto3";

import "github.com/openconfig/gnmi/proto/gnmi/gnmi.proto";

package gnmi.dialout;

// gNMIDialOut defines a service which is used by a target system (typically a
// network element) to initiate connections to a client (collector). The server
// is implemented at the collector, such that the target can initiate connections
// to the collector, based on a configured set of telemetry subscriptions.
service gNMIDialOut {
  // Publish allows the target to send telemetry updates (in the form of
  // SubscribeResponse messaages, which have the same semantics as in the
  // gNMI Subscribe RPC, to a client. The client may optionally return the
  // PublishResponse message in response to the dial-out connection from the
  // target as acknowledgement to the SubscribeResponse message
  //
  // The configuration of subscriptions associated with the publish RPC may
  // be through the OpenConfig telemetry configuration and operational state
  // model:
  // https://github.com/openconfig/public/blob/master/release/models/telemetry/openconfig-telemetry.yang
  rpc Publish(stream SubscribeResponse) returns (stream PublishResponse);
}

// PublishResponse is the message sent within the Publish RPC of the gNMI
// dial-out service by the client (collector) to the target. It is used for
// the flow-control of the telemetry update messages.
message PublishResponse {
	oneof request {
		bool stop = 1;             // Stop signal; the target stop sending the update immediately.
    bool restart = 2;          // Restart signal; the target restart sending the update immediately.
    int64 stop_interval = 3;   // Stop interval in nanoseconds; the target doesn't send any of the update in this interval.
	}
}