syntax = "proto3";

import "github.com/openconfig/gnmi/proto/gnmi/gnmi.proto";

package gnmi.dialout;

// Dial-out Telemetry service (gNMIDialOut) defines a telemetry service initiated by the device. 
// (gNMI Telemetry service is initiated by the collector, not the device.)
// The server is implemented at the collector, such that the device can initiate 
// connections to the collector, based on a configured set of telemetry subscriptions.
// The Publish RPC allows the device to send telemetry updates in the form of 
// SubscribeResponse messages, which have the same semantics as in the gNMI Subscribe RPC, 
// to a collector. The collector may optionally return the PublishResponse message 
// to control the flow of the telemetry updates.
service gNMIDialOut {
  rpc Publish(stream SubscribeResponse) returns (stream PublishResponse);
}

// PublishResponse is the message sent within the Publish RPC by the client (collector) 
// to the target. It allows the flow-control of the telemetry update messages.
message PublishResponse {
	oneof request {
		bool stop = 1;             // Stop signal; the target stops sending the update immediately.
    bool restart = 2;          // Restart signal; the target restart sending the update immediately.
    int64 stop_interval = 3;   // Stop interval in nanoseconds; the target doesn't send any of the updates in this interval.
	}
}